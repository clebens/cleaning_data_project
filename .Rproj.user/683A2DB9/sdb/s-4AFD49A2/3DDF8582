{
    "contents" : "# Variables\n\ndata_dir <- \"./\"\n\noutput_dir <- \"./output/\"\nif (!file.exists(output_dir)) {\n  dir.create(output_dir)\n}\n\nactivities <- c(\"WALKING\", \"WALKING_UPSTAIRS\", \"WALKING_DOWNSTAIRS\",\n                \"SITTING\", \"STANDING\", \"LAYING\")\n\n\n# Load Files\ns_train_file <- paste(data_dir, \"train/subject_train.txt\", sep=\"\")\ns_train <- read.table(s_train_file, sep=\"\", header=FALSE)\n\nx_train_file <- paste(data_dir, \"train/X_train.txt\", sep=\"\")\nx_train <- read.table(x_train_file, sep=\"\", header=FALSE)\n\ny_train_file <- paste(data_dir, \"train/Y_train.txt\", sep=\"\")\ny_train <- read.table(y_train_file, sep=\"\", header=FALSE)\n\ns_test_file <- paste(data_dir, \"test/subject_test.txt\", sep=\"\")\ns_test <- read.table(s_test_file, sep=\"\", header=FALSE)\n\nx_test_file <- paste(data_dir, \"test/X_test.txt\", sep=\"\")\nx_test <- read.table(x_test_file, sep=\"\", header=FALSE)\n\ny_test_file <- paste(data_dir, \"test/Y_test.txt\", sep=\"\")\ny_test <- read.table(y_test_file, sep=\"\", header=FALSE)\n\n# Rename Meaningful Columns\n\ncolnames(s_train)[1] <- \"Subject\"\ncolnames(y_train)[1] <- \"Activity\"\n\ncolnames(s_test)[1] <- \"Subject\"\ncolnames(y_test)[1] <- \"Activity\"\n\n# Replace Activity Labels with Activity Names\n# Only 6 cases -> elected to hard code for simplicity\n\ny_train[y_train$Activity == 1, \"Activity\"] <- \"WALKING\"\ny_train[y_train$Activity == 2, \"Activity\"] <- \"WALKING_UPSTAIRS\"\ny_train[y_train$Activity == 3, \"Activity\"] <- \"WALKING_DOWNSTAIRS\"\ny_train[y_train$Activity == 4, \"Activity\"] <- \"SITTING\"\ny_train[y_train$Activity == 5, \"Activity\"] <- \"STANDING\"\ny_train[y_train$Activity == 6, \"Activity\"] <- \"LAYING\"\n\ny_test[y_test$Activity == 1, \"Activity\"] <- \"WALKING\"\ny_test[y_test$Activity == 2, \"Activity\"] <- \"WALKING_UPSTAIRS\"\ny_test[y_test$Activity == 3, \"Activity\"] <- \"WALKING_DOWNSTAIRS\"\ny_test[y_test$Activity == 4, \"Activity\"] <- \"SITTING\"\ny_test[y_test$Activity == 5, \"Activity\"] <- \"STANDING\"\ny_test[y_test$Activity == 6, \"Activity\"] <- \"LAYING\"\n\n# Find mean and std_dev for x measurements, store in tidy table\nx_test_mean <- rowMeans(x_test)\nx_test_sd <- apply(x_test, 1, sd)\nx_test_tidy <- cbind(x_test_mean, x_test_sd)\ncolnames(x_test_tidy) <- c(\"Mean\", \"Std.Dev\")\n  \nx_train_mean <- rowMeans(x_train)\nx_train_sd <- apply(x_train, 1, sd)\nx_train_tidy <- cbind(x_train_mean, x_train_sd)\ncolnames(x_train_tidy) <- c(\"Mean\", \"Std.Dev\")\n\n# Combined Test Data including:\n# Subject, Activity, Mean of Test Data, Standard Dev. of Test Data\ntest_data <- cbind(s_test, y_test, x_test_tidy)\n\n# Combined Train Data including:\n# Subject, Activity, Mean of Test Data, Standard Dev. of Test Data\ntrain_data <- cbind(s_train, y_train, x_train_tidy)\n\n# Combined Test Data and Train Data rbinded to form\n# A single data set\ncombined_data <- rbind(test_data, train_data)\n\n# Write Combined Data to CSV file\noutput_file <- paste(output_dir, \"/combined_data.csv\", sep=\"\")\nwrite.table(combined_data, output_file, sep=\",\")\n\n# Get Averages for Subject\n\ntidy_data <- data.frame(Subject=as.numeric(), Activity=character(), Mean=as.numeric())\n  \nfor (subject in 1:30) {\n for (activity in activities) {\n   cur_entry <- combined_data[combined_data$Activity == activity & \n                   combined_data$Subject == subject, \"Mean\"]\n   cur_mean <- mean(cur_entry)\n   cur_data <- data.frame(Subject=subject, Activity=activity, Mean=cur_mean)\n   tidy_data <- rbind(tidy_data, cur_data)\n } \n}\n\n# Write Tidy Data to CSV file\noutput_file <- paste(output_dir, \"/tidy_data.csv\", sep=\"\")\nwrite.table(tidy_data, output_file, sep=\",\")\n",
    "created" : 1403194927808.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1934452328",
    "id" : "3DDF8582",
    "lastKnownWriteTime" : 1403209068,
    "path" : "~/gdrive/Courses/Online/crs-data-science/cleaning_data/course_project/run_analysis.R",
    "project_path" : "run_analysis.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}